git 설치 
git_test 폴더 만들어서 git bash로 열기

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ pwd
/c/hsh/git_text

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ touch 1 2 3 4

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ mkdir myFolder

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ rm -r *

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ mkdir myFolder

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ rm -r myFolder/

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ git config --global user.name "tjs0330"

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ git config --global  user.name "HSH"

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ git config --gobal user.email "tjs0899@naver.com"
error: unknown option `gobal'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ git config --global user.email "tjs0899@naver.com"

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ touch index.html style.css app.js

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text
$ git init
Initialized empty Git repository in C:/hsh/git_text/.git/

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ touch .hidden

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        app.js
        index.html
        style.css

nothing added to commit but untracked files present (use "git add" to track)

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git add .

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   app.js
        new file:   index.html
        new file:   style.css


admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git commit -m "Initial Commit"
[master (root-commit) b25f756] Initial Commit
 3 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 app.js
 create mode 100644 index.html
 create mode 100644 style.css

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git status
On branch master
nothing to commit, working tree clean

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ code .

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git add .

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html


admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git commit -m "index.html"
[master f70ac5a] index.html
 1 file changed, 12 insertions(+)

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git status
On branch master
nothing to commit, working tree clean

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ touch README.md

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        README.md

nothing added to commit but untracked files present (use "git add" to track)

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ code .

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git add .

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$ git commit -m "리드미파일추가"
[master eca4ea8] 리드미파일추가
 1 file changed, 5 insertions(+)
 create mode 100644 README.md

admin@DESKTOP-PGS14BO MINGW64 /c/hsh/git_text (master)
$
